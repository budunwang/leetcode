1031.Maximum Sum of Two Non-Overlapping Subarrays
public int maxSumTwoNoOverlap(int[] A, int L, int M) {
    int length = A.length;
    int[] arr = new int[length + 1];
    for (int i = 0; i < length; i++) {
        arr[i + 1] = arr[i] + A[i];
    }
    int sum = 0;
    for (int i = 0; i <= length - L; i++) {
        int sumL = arr[i + L] - arr[i];
        int sumM = 0;
        for (int j = 0; j <= i - M; j++) {
            sumM = Math.max(sumM, arr[j + M] - arr[j]);
        }
        for (int j = i + L; j <= length - M; j++) {
            sumM = Math.max(sumM, arr[j + M] - arr[j]);
        }
        sum = Math.max(sum, sumL + sumM);
    }
    return sum;
}