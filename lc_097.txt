97.Interleaving String
public int[][] dp;

public boolean isInterleave(String s1, String s2, String s3) {
    if (s1.length() + s2.length() != s3.length()) {
        return false;
    }
    dp = new int[s1.length() + 1][s2.length() + 1];
    return dfs(s1, s2, s3, 0, 0);
}

public boolean dfs(String s1, String s2, String s3, int i1 ,int i2) {
    if (i1 == s1.length() && i2 == s2.length()) {
        return true;
    }
    if (dp[i1][i2] != 0) {
        return dp[i1][i2] == 1;
    }
    boolean isValid = false;
    int i3 = i1 + i2;
    if (i1 < s1.length() && s1.charAt(i1) == s3.charAt(i3)) {
        isValid = isValid || dfs(s1, s2, s3, i1 + 1, i2);
    }
    if (i2 < s2.length() && s2.charAt(i2) == s3.charAt(i3)) {
        isValid = isValid || dfs(s1, s2, s3, i1, i2 + 1);
    }
    dp[i1][i2] = isValid ? 1 : 2;
    return isValid;
}