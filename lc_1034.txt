1034.Coloring A Border
Only mark matched border grid
Not matched inner grid

public int[][] colorBorder(int[][] grid, int r0, int c0, int color) {
    int row = grid.length;
    int col = grid[0].length;
    int[][] res = new int[row][col];
    int[][] visited = new int[row][col];
    for (int i = 0; i < row; i++) {
        for (int j = 0; j < col; j++) {
            res[i][j] = grid[i][j];
        }
    }
    dfs(grid, res, visited, grid[r0][c0], color, r0, c0);
    return res;
}

public void dfs(int[][] grid, int[][] res, int[][] visited, int target, int color, int i, int j) {
    int row = grid.length;
    int col = grid[0].length;
    if (i < 0 || i > row - 1 || j < 0 || j > col - 1) {
        return;
    }
    if (visited[i][j] == 1) {
        return;
    }
    visited[i][j] = 1;
    if (grid[i][j] != target) {
        return;
    }
    res[i][j] = color;
    if (i > 0 && i < row - 1 
        && j > 0 && j < col -1
        && grid[i - 1][j] == target && grid[i + 1][j] == target
        && grid[i][j - 1] == target && grid[i][j + 1] == target) {
        res[i][j] = target;
    }
    dfs(grid, res, visited, target, color, i - 1, j);
    dfs(grid, res, visited, target, color, i + 1, j);
    dfs(grid, res, visited, target, color, i, j - 1);
    dfs(grid, res, visited, target, color, i, j + 1);
}