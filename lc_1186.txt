1186.Maximum Subarray Sum with One Deletion
public int maximumSum(int[] arr) {
    if (arr.length == 1) {
        return arr[0];
    }
    int length = arr.length;
    int[] left = new int[length];
    left[0] = arr[0];
    for (int i = 1; i < length; i++) {
        left[i] = Math.max(left[i - 1] + arr[i], arr[i]);
    }
    int[] right = new int[length];
    right[length - 1] = arr[length - 1];
    for (int i = length - 2; i >= 0; i--) {
        right[i] = Math.max(right[i + 1] + arr[i], arr[i]);
    }
    int sum = 0;
    int max = Integer.MIN_VALUE;
    for (int i = 0; i < length; i++) {
        sum = Math.max(sum + arr[i], arr[i]);
        int curSum = 0;
        if (i == 0) {
            curSum = right[i + 1];
        } else if (i == length - 1) {
            curSum = left[i - 1];
        } else {
            curSum = left[i - 1] + right[i + 1];
        }
        max = Math.max(max, Math.max(sum, curSum));
    }
    return max;
}