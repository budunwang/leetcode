376.Wiggle Subsequence
0: positive diff
1: negative diff
dp[i][0] = nums[i] - nums[i - 1] > 0 ? dp[i - 1][1] : dp[i - 1][0];
dp[i][1] = nums[i] - nums[i - 1] < 0 ? dp[i - 1][0] : dp[i - 1][1];
public int wiggleMaxLength(int[] nums) {
    if (nums.length == 0) {
        return 0;
    }
    int length = nums.length;
    int[][] dp = new int[length + 1][2];
    for (int i = 2; i <= length; i++) {
        int diff = nums[i - 1] - nums[i - 2];
        if (diff > 0) {
            dp[i][0] = 1 + dp[i - 1][1];
            dp[i][1] = dp[i - 1][1];
        } else if (diff < 0) {
            dp[i][1] = 1 + dp[i - 1][0];
            dp[i][0] = dp[i - 1][0];
        } else {
            dp[i][0] = dp[i - 1][0];
            dp[i][1] = dp[i - 1][1];
        }
    }
    return Math.max(dp[length][0], dp[length][1]) + 1;
}