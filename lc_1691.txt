1691.Maximum Height by Stacking Cuboids
sort and dp
LIS
public int maxHeight(int[][] cuboids) {
    int length = cuboids.length;
    for (int[] cuboid : cuboids) {
        Arrays.sort(cuboid);
    }
    Arrays.sort(cuboids, (a, b) -> {
        if (a[0] != b[0]) {
            return a[0] - b[0];
        } else if (a[1] != b[1]) {
            return a[1] - b[1];
        } else {
            return a[2] - b[2];
        }
    });
    int[] dp = new int[length];
    int max = 0;
    for (int i = 0; i < length; i++) {
        dp[i] = cuboids[i][2];
        for (int j = 0; j < i; j++) {
            if (cuboids[i][0] >= cuboids[j][0] && cuboids[i][1] >= cuboids[j][1] && cuboids[i][2] >= cuboids[j][2]) {
                dp[i] = Math.max(dp[i], dp[j] + cuboids[i][2]);
            }
        }
        max = Math.max(max, dp[i]);
    }
    return max;
}