416.Partition Equal Subset Sum
dfs + memo
public int[][] dp;

public boolean canPartition(int[] nums) {
    if (nums.length == 0) {
        return true;
    }
    int sum = 0;
    for (int num : nums) {
        sum += num;
    }
    if (sum % 2 == 1) {
        return false;
    }
    int target = sum / 2;
    if (nums[nums.length - 1] > target) {
        return false;
    }
    Arrays.sort(nums);
    dp = new int[target + 1][nums.length + 1];
    return dfs(nums, 0, target);
}

public boolean dfs(int[] nums, int index, int target) {
    if (dp[target][index] != 0) {
        return dp[target][index] == 1;
    }
    if (target == 0) {
        dp[0][index] = 1;
        return true;
    }
    for (int i = index; i < nums.length; i++) {
        if (target - nums[i] >= 0) {
            if (dfs(nums, i + 1, target - nums[i])) {
                dp[target][index] = 1;
                return true;
            }
        }
    }
    dp[target][index] = 2;
    return false;
}