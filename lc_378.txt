378.Kth Smallest Element in a Sorted Matrix
binary search
search with undirect range
matrix is not the range.
matrix provides count of number which is smaller than selected number. 
The count of number which is smaller than selected number is the range. k is the number needed.
Find the number which has the count of number is k.

public int kthSmallest(int[][] matrix, int k) {
    int n = matrix.length;
    int left = matrix[0][0];
    int right = matrix[n - 1][n - 1];
    while (left < right) {
        int mid = left + (right - left) / 2;
        int count = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (matrix[i][j] <= mid) {
                    count++;
                } else {
                    break;
                }
            }
        }
        if (count < k) {
            left = mid + 1;
        } else {
            right = mid;
        }
    }
    return left;
}

heap
public int kthSmallest(int[][] matrix, int k) {
    int row = matrix.length;
    int col = matrix[0].length;
    PriorityQueue<Integer> pq = new PriorityQueue<Integer>(k);
    for (int i = 0; i < row; i++) {
        for (int j = 0; j < col; j++) {
            pq.add(matrix[i][j]);
        }
    }
    for (int i = 0; i < k - 1; i++) {
        pq.poll();
    }
    return pq.poll();
}