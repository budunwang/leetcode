996.Number of Squareful Arrays
i > 0 && A[i] == A[i - 1] && visited[i - 1] == 0), block same number with different index
public int res;
public int[] visited;

public int numSquarefulPerms(int[] A) {
    res = 0;
    visited = new int[A.length];
    Arrays.sort(A);
    dfs(A, -1, 0);
    return res;
}

public void dfs(int[] A, int num, int count) {
    if (count == A.length) {
        res++;
        return;
    }
    for (int i = 0; i < A.length; i++) {
        if (visited[i] != 0 || (i > 0 && A[i] == A[i - 1] && visited[i - 1] == 0)) {
            continue;
        }
        if (num == -1 || isSquare(num + A[i])) {
            visited[i] = 1;
            count++;
            dfs(A, A[i], count);
            visited[i] = 0;
            count--;
        }
    }
}

public boolean isSquare(int sum) {
    double num = Math.sqrt(sum);
    return num - Math.floor(num) == 0;
}