433.Minimum Genetic Mutation
public int minMutation(String start, String end, String[] bank) {
    char[] cs = new char[]{ 'A', 'C', 'G', 'T' };
    Set<String> set = new HashSet<String>();
    for (String str : bank) {
        set.add(str);
    }
    Queue<String> queue = new LinkedList<String>();
    queue.offer(start);
    int count = 0;
    while (!queue.isEmpty()) {
        int size = queue.size();
        for (int i = 0; i < size; i++) {
            String s = queue.poll();
            if (s.equals(end)) {
                return count;
            }
            char[] ss = s.toCharArray();
            char[] ss_c = ss.clone();
            List<String> list = new ArrayList<String>();
            for (int j = 0; j < ss.length; j++) {
                for (int k = 0; k < cs.length; k++) {
                    if (cs[k] != ss[j]) {
                        ss_c[j] = cs[k];
                        String str = new String(ss_c);
                        if (set.contains(str)) {
                            list.add(str);
                        }
                    }
                    ss_c[j] = ss[j];
                }
            }
            for (String str : list) {
                if (set.contains(str)) {
                    queue.offer(str);
                    set.remove(str);
                }
            }
        }
        count++;
    }
    return -1;
}