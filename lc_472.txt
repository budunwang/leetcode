472.Concatenated Words
1.dfs + trie
212
public class Node {
    Node[] children;
    boolean isEnd;
    Node() {
        children = new Node[26];
        isEnd = false;
    }
}

public Node root;
public List<String> list;

public List<String> findAllConcatenatedWordsInADict(String[] words) {
    root = new Node();
    list = new ArrayList<String>();
    for (String word : words) {
        build(word, root);
    }
    for (String word : words) {
        dfs(word, 0, 0, root);
    }
    return list;
}

public void build(String word, Node node) {
    for (char c : word.toCharArray()) {
        if (node.children[c - 'a'] == null) {
            node.children[c - 'a'] = new Node();
        }
        node = node.children[c - 'a'];
    }
    node.isEnd = true;
}

public boolean dfs(String word, int idx, int count, Node node) {
    if (idx == word.length()) {
        if (count >= 2) {
            list.add(word);
        }
        return count >= 2;
    }
    for (int i = idx; i < word.length(); i++) {
        char c = word.charAt(i);
        if (node.children[c - 'a'] == null) {
            return false;
        }
        node = node.children[c - 'a'];
        if (node.isEnd && dfs(word, i + 1, count + 1, root)) {
            return true;                
        }
    }
    return false;
}