1690.Stone Game VII
public int[][] dp;

public int stoneGameVII(int[] stones) {
    dp = new int[stones.length][stones.length];
    int length = stones.length;
    int[] sum = new int[length + 1];
    for (int i = 0; i < stones.length; i++) {
        sum[i + 1] = stones[i] + sum[i];
    }
    return dfs(stones, sum, 0, length - 1);
}

public int dfs(int[] stones, int[] sum, int left, int right) {
    if (left == right) {
        return 0;
    }
    if (dp[left][right] != 0) {
        return dp[left][right];
    }
    int sum_l = sum[right] - sum[left] - dfs(stones, sum, left, right - 1);
    int sum_r = sum[right + 1] - sum[left + 1] - dfs(stones, sum, left + 1, right);
    dp[left][right] = Math.max(sum_l, sum_r);
    return dp[left][right];
}