1404.Number of Steps to Reduce a Number in Binary Representation to One
public int numSteps(String s) {
    if (isValid(s)) {
        return 0;
    }
    String str = s.charAt(s.length() - 1) == '0' ? getEven(s) : getOdd(s);
    return 1 + numSteps(str);
}

public boolean isValid(String s) {
    if (s.charAt(s.length() - 1) != '1') {
        return false;
    }
    for (int i = 0; i < s.length() - 1; i++) {
        if (s.charAt(s.length() - i - 2) != '0') {
            return false;
        }
    }
    return true;
}

public String getOdd(String s) {
    StringBuilder sb = new StringBuilder();
    int sum = 0;
    int carry = 1;
    int i = 0;
    while (i < s.length() || carry == 1) {
        int n = i < s.length() ? s.charAt(s.length() - i - 1) - '0' : 0;
        i++;
        int tmp = n + carry;
        sum = tmp % 2;
        carry = tmp / 2;
        sb.append(sum);
    }
    return sb.reverse().toString();
}

public String getEven(String s) {
    StringBuilder sb = new StringBuilder();
    for (int i = 0; i < s.length() - 1; i++) {
        sb.append(s.charAt(s.length() - i - 2));
    }
    sb.append(0);
    return sb.reverse().toString();
}