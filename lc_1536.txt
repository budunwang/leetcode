1536.Minimum Swaps to Arrange a Binary Grid
greedy
Select the closest row that contains enough zeros, and swap each rows above
public int minSwaps(int[][] grid) {
    int row = grid.length;
    int col = grid[0].length;
    int[] arr = new int[row];
    for (int i = 0; i < row; i++) {
        int count = 0;
        for (int j = col - 1; j >= 0; j--) {
            if (grid[i][j] == 0) {
                count++;
            } else {
                break;
            }
        }
        arr[i] = count;
    }
    int sum = 0;
    for (int i = 0; i < row - 1; i++) {
        int n = -1;
        for (int j = i; j < row; j++) {
            if (arr[j] >= col - 1 - i) {
                n = j;
                break;
            }
        }
        if (n == -1) {
            return -1;
        }
        for (int j = n; j >= i + 1; j--) {
            int tmp = arr[j];
            arr[j] = arr[j - 1];
            arr[j - 1] = tmp;
            sum++;
        }
    }
    return sum;
}