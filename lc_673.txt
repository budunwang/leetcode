673.Number of Longest Increasing Subsequence
300
public int findNumberOfLIS(int[] nums) {
    if (nums.length == 0) {
        return 0;
    }
    int length = nums.length;
    int[] dp = new int[length];
    int[] len = new int[length];
    int res = 1;
    int max = 1;
    dp[0] = 1;
    len[0] = 1;
    for (int i = 1; i < length; i++) {
        int curmax = 1;
        int len_max = 1;
        for (int j = 0; j < i; j++) {
            if (nums[i] > nums[j]) {
                if (curmax == dp[j] + 1) {
                    len_max += len[j];
                } else if (curmax < dp[j] + 1){
                    len_max = len[j];
                    curmax = dp[j] + 1;
                }
            }
        }
        dp[i] = curmax;
        len[i] = len_max;
        if (curmax == max) {
            res += len[i];
        } else if (curmax > max){
            res = len[i];
            max = curmax;
        }
    }
    return res;
}