1458.Max Dot Product of Two Subsequences
LCS
1143
1.Use current column
// add last column if it is positive
nums1[i - 1] * nums2[j - 1] + Math.max(dp[i - 1][j - 1], 0)
2.Do not use current column
Math.max(dp[i - 1][j], dp[i][j - 1])
public int maxDotProduct(int[] nums1, int[] nums2) {
    int l1 = nums1.length;
    int l2 = nums2.length;
    int[][] dp = new int[l1 + 1][l2 + 1];
    for (int i = 0; i <= l1; i++) {
        dp[i][0] = Integer.MIN_VALUE;
    }
    for (int j = 0; j <= l2; j++) {
        dp[0][j] = Integer.MIN_VALUE;
    }
    for (int i = 1; i <= l1; i++) {
        for (int j = 1; j <= l2; j++) {
            dp[i][j] = Math.max(nums1[i - 1] * nums2[j - 1] + Math.max(dp[i - 1][j - 1], 0), Math.max(dp[i - 1][j], dp[i][j - 1]));
        }
    }
    return dp[l1][l2];
}