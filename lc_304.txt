304.Range Sum Query 2D - Immutable
同303。
private int[][] dp;
public NumMatrix(int[][] matrix) {
    if (matrix.length == 0) {
        return;
    }
    int row = matrix.length;
    int col = matrix[0].length;
    dp = new int[row][col];
    for (int i = 0; i < row; i++) {
        for (int j = 0; j < col; j++) {
            int sum = j == 0 ? 0 : dp[i][j - 1];
            dp[i][j] = matrix[i][j] + sum;
        }
    }
}

public int sumRegion(int row1, int col1, int row2, int col2) {
    int sum = 0;
    for (int i = row1; i < row2 + 1; i++) {
        int sum_i = col1 == 0 ? 0 : dp[i][col1 - 1];
        int sum_j = dp[i][col2];
        sum += sum_j - sum_i;
    }
    return sum;
}

private int[][] dp;
public NumMatrix(int[][] matrix) {
    if (matrix.length == 0) {
        return;
    }
    int row = matrix.length;
    int col = matrix[0].length;
    dp = new int[row + 1][col + 1];
    for (int i = 1; i <= row; i++) {
        for (int j = 1; j <= col; j++) {
            dp[i][j] = dp[i - 1][j] + dp[i][j - 1] - dp[i - 1][j - 1] + matrix[i - 1][j - 1];
        }
    }
}

public int sumRegion(int row1, int col1, int row2, int col2) {
    return dp[row2 + 1][col2 + 1] - dp[row1][col2 + 1] - dp[row2 + 1][col1] + dp[row1][col1];
}