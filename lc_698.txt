698.Partition to K Equal Sum Subsets
416
473
public int[] visited;

public boolean canPartitionKSubsets(int[] nums, int k) {
    visited = new int[nums.length];
    int sum = 0;
    for (int num : nums) {
        sum += num;
    }
    if (sum % k != 0) {
        return false;
    }
    Arrays.sort(nums);
    return dfs(nums, 0, nums.length - 1, sum / k, k);
}

public boolean dfs(int[] nums, int curSum, int idx, int sum, int k) {
    if (k == 0) {
        return true;
    }
    if (curSum == sum && dfs(nums, 0, nums.length - 1, sum, k - 1)) {
        return true;
    }
    for (int i = idx; i >= 0; i--) {
        int tmp = curSum + nums[i];
        if (visited[i] == 0 && tmp <= sum) {
            visited[i] = 1;
            if (dfs(nums, tmp, i - 1, sum, k)) {
                return true;
            }
            visited[i] = 0;
        }   
    }
    return false;
}