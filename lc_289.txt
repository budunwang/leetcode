289.Game of Life
4 state:
0: 0 -> 0
1: 1 -> 1
2: 0 -> 1
3: 1 -> 0
public void gameOfLife(int[][] board) {
    if (board.length == 0) {
        return;
    }
    int row = board.length;
    int col = board[0].length;
    for (int i = 0; i < row; i++) {
        for (int j = 0; j < col; j++) {
            int sum = count(board, i - 1, j - 1) + count(board, i - 1, j)
                + count(board, i - 1, j + 1) + count(board, i, j - 1)
                + count(board, i, j + 1) + count(board, i + 1, j - 1)
                + count(board, i + 1, j) + count(board, i + 1, j + 1);
            if (board[i][j] == 0 && sum == 3) {
                board[i][j] = 2;
            } else if (board[i][j] == 1 && (sum < 2 || sum > 3)) {
                board[i][j] = 3;
            }
        }
    }
    for (int i = 0; i < row; i++) {
        for (int j = 0; j < col; j++) {
            if (board[i][j] > 1) {
                board[i][j] = -1 * board[i][j] + 3;
            }
        }
    }
}

public int count(int[][] board, int i, int j) {
    if (i >= 0 && i < board.length && j >= 0 && j < board[0].length) {
        return board[i][j] % 2;
    }
    return 0;
}