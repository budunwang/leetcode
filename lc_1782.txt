1782.Count Pairs Of Nodes
两指针求出大于query的点组合个数
遍历边，除去大于query的点组合中减去重复边，最终和小于query的边。
public int[] countPairs(int n, int[][] edges, int[] queries) {
    int[] count = new int[n + 1];
    List<Map<Integer, Integer>> list = new ArrayList<Map<Integer, Integer>>();
    for (int i = 0; i <= n; i++) {
        list.add(new HashMap<Integer, Integer>());
    }
    for (int[] edge : edges) {
        int n1 = Math.min(edge[0], edge[1]);
        int n2 = Math.max(edge[0], edge[1]);
        list.get(n1).put(n2, list.get(n1).getOrDefault(n2, 0) + 1);
        count[edge[0]]++;
        count[edge[1]]++;
    }
    int[] arr = count.clone();
    Arrays.sort(arr);
    int[] res = new int[queries.length];
    for (int i = 0; i < queries.length; i++) {
        int l = 1;
        int r = n;
        while (l < r) {
            if (arr[l] + arr[r] > queries[i]) {
                res[i] += r - l;
                r--;
            } else {
                l++;
            }
        }
        for (int j = 1; j < n; j++) {
            for (Map.Entry<Integer, Integer> entry : list.get(j).entrySet()) {
                int key = entry.getKey();
                int val = entry.getValue();
                if (count[j] + count[key] > queries[i] && count[j] + count[key] - val <= queries[i]) {
                    res[i]--;
                }
            }
        }
    }
    return res;
}