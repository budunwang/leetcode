1610.Maximum Number of Visible Points
sliding window
Add one loop to count corner case
public int visiblePoints(List<List<Integer>> points, int angle, List<Integer> location) {
    List<Double> list = new ArrayList<Double>();
    int sum = 0;
    for (List<Integer> point : points) {
        int x = point.get(0) - location.get(0);
        int y = point.get(1) - location.get(1);
        if (x == 0 && y == 0) {
            sum++;
        } else {
            list.add(Math.atan2(y, x) * 180 / Math.PI);
        }
    }
    Collections.sort(list);
    List<Double> tmp = new ArrayList<Double>(list);
    for (Double num : list) {
        tmp.add(num + 360);
    }
    int max = 0;
    int left = 0;
    for (int right = 0; right < tmp.size(); right++) {
        while (tmp.get(right) - tmp.get(left) > angle) {
            left++;
        }
        max = Math.max(max, right - left + 1);
    }
    return sum + max;
}