// 同78
// 排列组合
public List<List<Integer>> permute(int[] nums) {
	if (nums == null || nums.length == 0) {
		return null;
	}
	List<List<Integer>> res = new ArrayList<List<Integer>>();
	List<Integer> list = new ArrayList<Integer>();
	helper(res, list, nums);
	return res;
}

public void helper(List<List<Integer>> res, List<Integer> list, int[] nums) {
	// 只取叶结点
	// 即list长度等于数组长度
	if (list.size() == nums.length) {
		res.add(new ArrayList<Integer>(list));
	}
	// 子结点集合
	// 除当前已有结点外的所有结点结合
	for (int i = 0 ; i < nums.length; i++) {
		if (list.indexOf(nums[i]) != -1) continue;
		list.add(nums[i]);
		helper(res, list, nums);
		list.remove(list.size() - 1);
	}
}