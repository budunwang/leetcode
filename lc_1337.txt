1337.The K Weakest Rows in a Matrix
public int[] kWeakestRows(int[][] mat, int k) {
    PriorityQueue<int[]> pq = new PriorityQueue<int[]>((a, b) -> {
        if (a[0] == b[0]) {
            return a[1] - b[1];
        } else {
            return a[0] - b[0];
        }
    });
    for (int i = 0; i < mat.length; i++) {
        int count = 0;
        for (int num : mat[i]) {
            count += num;
        }
        pq.offer(new int[] { count, i });
    }
    int[] arr = new int[k];
    int i = 0;
    while (i < k) {
        arr[i++] = pq.poll()[1];
    }
    return arr;
}