25.Reverse Nodes in k-Group
1.reverse part list
2.reverse (total / k) round
public ListNode reverseKGroup(ListNode head, int k) {
    ListNode dummy = new ListNode();
    dummy.next = head;
    int sum = 0;
    while (head != null) {
        head = head.next;
        sum++;
    }
    int round = sum / k;
    ListNode cur = dummy;
    while (round > 0) {
        ListNode prev = cur;
        cur = cur.next;
        ListNode curHead = cur;
        int count = k - 1;
        while (count > 0) {
            ListNode tmp = cur.next;
            cur.next = tmp.next;
            tmp.next = curHead;
            curHead = tmp;
            count--;
        }
        prev.next = curHead;
        round--;
    }
    return dummy.next;
}