1253.Reconstruct a 2-Row Binary Matrix
greedy
public List<List<Integer>> reconstructMatrix(int upper, int lower, int[] colsum) {
    List<List<Integer>> list = new ArrayList<List<Integer>>();
    int sum = 0;
    List<Integer> up = new ArrayList<Integer>();
    List<Integer> low = new ArrayList<Integer>();
    for (int num : colsum) {
        sum += num;
        up.add(0);
        low.add(0);
    }
    if (upper + lower != sum) {
        return list;
    }
    for (int i = 0; i < colsum.length; i++) {
        int num = colsum[i];
        if (num == 2) {
            up.set(i, 1);
            low.set(i, 1);
            upper--;
            lower--;
        }
    }
    if (upper < 0 || lower < 0) {
        return list;
    }
    for (int i = 0; i < colsum.length; i++) {
        int num = colsum[i];
        if (num == 1) {
            if (upper != 0) {
                up.set(i, 1);
                low.set(i, 0);
                upper--;
            } else {
                up.set(i, 0);
                low.set(i, 1);
            }
        }
    }
    list.add(up);
    list.add(low);
    return list;
}