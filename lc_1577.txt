1577.Number of Ways Where Square of Number Is Equal to Product of Two Numbers
public int numTriplets(int[] nums1, int[] nums2) {
    Map<Long, Integer> map_1 = new HashMap<Long, Integer>();
    for (int i = 0; i < nums1.length; i++) {
        for (int j = i + 1; j < nums1.length; j++) {
            long product = (long) nums1[i] * nums1[j];
            map_1.put(product, map_1.getOrDefault(product, 0) + 1);
        }
    }
    Map<Long, Integer> map_2 = new HashMap<Long, Integer>();
    for (int i = 0; i < nums2.length; i++) {
        for (int j = i + 1; j < nums2.length; j++) {
            long product = (long) nums2[i] * nums2[j];
            map_2.put(product, map_2.getOrDefault(product, 0) + 1);
        }
    }
    int sum = 0;
    for (int i = 0; i < nums1.length; i++) {
        sum += map_2.getOrDefault((long) nums1[i] * nums1[i], 0);
    }
    for (int i = 0; i < nums2.length; i++) {
        sum += map_1.getOrDefault((long) nums2[i] * nums2[i], 0);
    }
    return sum;
}