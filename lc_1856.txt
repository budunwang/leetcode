1856.Maximum Subarray Min-Product
monostack
84
public int maxSumMinProduct(int[] nums) {
    int mod = (int) 1e9 + 7;
    long[] sum = new long[nums.length + 1];
    for (int i = 0; i < nums.length; i++) {
        sum[i + 1] = sum[i] + nums[i];
    }
    Deque<Integer> stack = new ArrayDeque<Integer>();
    long max = 0;
    for (int i = 0; i <= nums.length; i++) {
        while (!stack.isEmpty() && (i == nums.length || nums[stack.getLast()] >= nums[i])) {
            int num = nums[stack.pollLast()];
            int idx = stack.isEmpty() ? 0 : stack.getLast() + 1;
            max = Math.max(max, (sum[i] - sum[idx]) * num);
        }
        stack.addLast(i);
    }
    return (int) (max % mod);
}