323.Number of Connected Components in an Undirected Graph
public Set<Integer> visited;

public int countComponents(int n, int[][] edges) {
    visited = new HashSet<Integer>();
    List<Integer>[] map = new ArrayList[n];
    for (int i = 0; i < n; i++) {
        map[i] = new ArrayList<Integer>();
    }
    for (int[] edge : edges) {
        map[edge[0]].add(edge[1]);
        map[edge[1]].add(edge[0]);
    }
    int sum = 0;
    for (int i = 0; i < n; i++) {
        if (!visited.contains(i)) {
            visited.add(i);
            dfs(map, i);
            sum++;
        }
    }
    return sum;
}

public void dfs(List<Integer>[] map, int idx) {
    for (int n : map[idx]) {
        if (!visited.contains(n)) {
            visited.add(n);
            dfs(map, n);
        }
    }
}