1721.Swapping Nodes in a Linked List
public ListNode swapNodes(ListNode head, int k) {
    ListNode dummy = new ListNode();
    dummy.next = head;
    head = dummy;
    int i = 1;
    while (i < k) {
        head = head.next;
        i++;
    }
    ListNode first = head;
    ListNode slow = dummy;
    ListNode fast = dummy;
    i = 1;
    while (i <= k && fast.next != null) {
        fast = fast.next;
        i++;
    }
    while (fast != null && fast.next != null) {
        slow = slow.next;
        fast = fast.next;
    }
    if (first == slow) {
        return dummy.next;
    }
    int n1 = first.next.val;
    int n2 = slow.next.val;
    first.next.val = n2;
    slow.next.val = n1;
    return dummy.next;
}