533.Lonely Pixel II
public int findBlackPixel(char[][] picture, int N) {
    int row = picture.length;
    int col = picture[0].length;
    Map<String, Integer> map = new HashMap<String, Integer>();
    int[] cols = new int[col];
    for (int i = 0; i < row; i++) {
        StringBuilder sb = new StringBuilder();
        int rows = 0;
        for (int j = 0; j < col; j++) {
            sb.append(picture[i][j]);
            if (picture[i][j] == 'B') {
                rows++;
                cols[j]++;
            }
        }
        if (rows == N) {
            String str = sb.toString();
            map.put(str, map.getOrDefault(str, 0) + 1);   
        }
    }
    int sum = 0;
    for (Map.Entry<String, Integer> entry : map.entrySet()) {
        String str = entry.getKey();
        int count = entry.getValue();
        if (count == N) {
            for (int i = 0; i < col; i++) {
                if (str.charAt(i) == 'B' && cols[i] == N) {
                    sum += count;
                }
            }
        }

    }
    return sum;
}