373.Find K Pairs with Smallest Sums
add possible minimum sum pair in heap
public List<List<Integer>> kSmallestPairs(int[] nums1, int[] nums2, int k) {
    if (nums1.length == 0 || nums2.length == 0) {
        return new ArrayList<List<Integer>>();
    }
    PriorityQueue<int[]> pq = new PriorityQueue<int[]>((a, b) -> a[0] + a[1] - b[0] - b[1]);
    for (int num : nums1) {
        pq.offer(new int[] { num, nums2[0], 0 });
    }
    List<List<Integer>> res = new ArrayList<List<Integer>>();
    while (res.size() < k && !pq.isEmpty()) {
        int[] arr = pq.poll();
        List<Integer> list = new ArrayList<Integer>();
        list.add(arr[0]);
        list.add(arr[1]);
        res.add(list);
        int idx = arr[2];
        if (idx < nums2.length - 1) {
            pq.offer(new int[] { arr[0], nums2[idx + 1], idx + 1 });
        }
    }
    return res;
}