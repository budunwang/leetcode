1329.Sort the Matrix Diagonally
public int[][] diagonalSort(int[][] mat) {
    int row = mat.length;
    int col = mat[0].length;
    for (int i = row - 1; i >= 0; i--) {
        sort(mat, i, 0);
    }
    for (int i = 1; i < col; i++) {
        sort(mat, 0, i);
    }
    return mat;
}

public void sort(int[][] mat, int i, int j) {
    int row = mat.length;
    int col = mat[0].length;
    int i_d = i;
    int j_d = j;
    List<Integer> list = new ArrayList<Integer>();
    while (i_d < row && j_d < col) {
        list.add(mat[i_d++][j_d++]);
    }
    Collections.sort(list);
    i_d = i;
    j_d = j;
    int index = 0;
    while (i_d < row && j_d < col) {
        mat[i_d++][j_d++] = list.get(index++);
    }
}