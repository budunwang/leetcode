1326.Minimum Number of Taps to Open to Water a Garden
greedy
get the largest interval end while the interval start is smaller than current end
public int minTaps(int n, int[] ranges) {
    int[][] intervals = new int[ranges.length][2];
    for (int i = 0; i < ranges.length; i++) {
        intervals[i][0] = Math.max(0, i - ranges[i]);
        intervals[i][1] = Math.min(n, i + ranges[i]);
    }
    Arrays.sort(intervals, (a, b) -> a[0] - b[0]);
    int end = 0;
    int curEnd = 0;
    int i = 0;
    int count = 0;
    while (end < n) {
        while (i < intervals.length && intervals[i][0] <= end) {
            curEnd = Math.max(curEnd, intervals[i][1]);
            i++;
        }
        if (curEnd == end) {
            return -1;
        }
        count++;
        end = curEnd;
    }
    return count;
}