986.Interval List Intersections
public int[][] intervalIntersection(int[][] A, int[][] B) {
    int p1 = 0;
    int p2 = 0;
    List<int[]> list = new ArrayList<int[]>();
    while (p1 < A.length && p2 < B.length) {
        int start = Math.max(A[p1][0], B[p2][0]);
        int end = Math.min(A[p1][1], B[p2][1]);
        if (start <= end) {
            list.add(new int[] { start, end });
        }
        if (A[p1][1] <= end) {
            p1++;
        }
        if (B[p2][1] <= end) {
            p2++;
        }
    }
    int[][] res = new int[list.size()][2];
    for (int i = 0; i < list.size(); i++) {
        res[i] = list.get(i);
    }
    return res;
}