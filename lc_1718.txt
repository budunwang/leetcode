1718.Construct the Lexicographically Largest Valid Sequence
dfs
public int[] constructDistancedSequence(int n) {
    int[] arr = new int[2 * n - 1];
    int[] visited = new int[n + 1];
    dfs(arr, visited, 0);
    return arr;
}

public boolean dfs(int[] arr, int[] visited, int count) {
    if (count == visited.length - 1) {
        return true;
    }
    int idx = 0;
    for (int i = 0; i < arr.length; i++) {
        if (arr[i] == 0) {
            idx = i;
            break;
        }
    }
    for (int i = visited.length - 1; i > 0; i--) {
        if (visited[i] == 0) {
            if (i == 1) {
                visited[i] = 1;
                arr[idx] = i;
                if (!dfs(arr, visited, count + 1)) {
                    visited[i] = 0;
                    arr[idx] = 0;
                    return false;
                } else {
                    return true;
                }
            } else if (idx + i < arr.length && arr[idx + i] == 0) {
                visited[i] = 1;
                arr[idx] = i;
                arr[idx + i] = i;
                if (!dfs(arr, visited, count + 1)) {
                    visited[i] = 0;
                    arr[idx] = 0;
                    arr[idx + i] = 0;
                } else {
                    return true;
                }
            }
        }
    }
    return false;
}