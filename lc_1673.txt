1673.Find the Most Competitive Subsequence
public int[] mostCompetitive(int[] nums, int k) {
    Stack<Integer> stack = new Stack<Integer>();
    for (int i = 0; i < nums.length; i++) {
        while (!stack.isEmpty() && stack.peek() > nums[i] && stack.size() + nums.length - i > k) {
            stack.pop();
        }
        stack.push(nums[i]);
    }
    List<Integer> list = new ArrayList<Integer>();
    while (!stack.isEmpty()) {
        list.add(0, stack.pop());
    }
    int[] arr = new int[k];
    for (int i = 0; i < k; i++) {
        arr[i] = list.get(i);
    }
    return arr;
}