1626.Best Team With No Conflicts
dp
300 Longest Increasing Subsequence
public int bestTeamScore(int[] scores, int[] ages) {
    int length = scores.length;
    int[][] list = new int[length][2];
    for (int i = 0; i < length; i++) {
        list[i] = new int[] { ages[i], scores[i] };
    }
    Arrays.sort(list, (a, b) -> a[0] != b[0] ? a[0] - b[0] : a[1] - b[1]);
    int max = 0;
    int[] dp = new int[length];
    for (int i = 0; i < length; i++) {
        dp[i] = list[i][1];
        for (int j = 0; j < i; j++) {
            if (list[i][1] >= list[j][1]) {
                dp[i] = Math.max(dp[i], dp[j] + list[i][1]);
            }
        }
        max = Math.max(max, dp[i]);
    }
    return max;
}