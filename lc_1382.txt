1382.Balance a Binary Search Tree
List<Integer> list;

public TreeNode balanceBST(TreeNode root) {
    list = new ArrayList<Integer>();
    dfs(root);
    return build(0, list.size() - 1);
}

public void dfs(TreeNode root) {
    if (root == null) {
        return;
    }
    dfs(root.left);
    list.add(root.val);
    dfs(root.right);
}

public TreeNode build(int left, int right) {
    if (left > right) {
        return null;
    }
    if (left == right) {
        return new TreeNode(list.get(left));
    }
    int mid = left + (right - left) / 2;
    TreeNode treeNode = new TreeNode(list.get(mid));
    treeNode.left = build(left, mid - 1);
    treeNode.right = build(mid + 1, right);
    return treeNode;
}