1152.Analyze User Website Visit Pattern
public List<String> mostVisitedPattern(String[] username, int[] timestamp, String[] website) {
    Map<Integer, List<String>> timeMap = new HashMap<Integer, List<String>>();
    for (int i = 0; i < timestamp.length; i++) {
        timeMap.putIfAbsent(timestamp[i], new ArrayList<String>());
        timeMap.get(timestamp[i]).add(username[i] + "_" + website[i]);
    }
    Arrays.sort(timestamp);
    Map<String, List<String>> userMap = new HashMap<String, List<String>>();
    for (int i = 0; i < timestamp.length; i++) {
        List<String> list = timeMap.get(timestamp[i]);
        for (String str : list) {
            String[] ss = str.split("_");
            String user = ss[0];
            String web = ss[1];
            userMap.putIfAbsent(user, new ArrayList<String>());
            userMap.get(user).add(web);
        }
    }
    Map<String, Integer> webMap = new HashMap<String, Integer>();
    String res = "";
    int max = 0;
    for (Map.Entry<String, List<String>> entry : userMap.entrySet()) {
        List<String> list = entry.getValue();
        int size = list.size();
        Set<String> set = new HashSet<String>();
        for (int i = 0; i < size - 2; i++) {
            for (int j = i + 1; j < size - 1; j++) {
                for (int k = j + 1; k < size; k++) {
                    String str = list.get(i) + "_" + list.get(j) + "_" + list.get(k);
                    set.add(str);
                }
            }
        }
        for (String str : set) {
            int count = webMap.getOrDefault(str, 0) + 1;
            webMap.put(str, count);
            if (count > max) {
                max = count;
                res = str;
            } else if (count == max) {
                if (res.equals("") || str.compareTo(res) < 0) {
                    res = str;
                }
            }
        }
    }
    String[] ss = res.split("_");
    return new ArrayList<String>(Arrays.asList(ss));
}