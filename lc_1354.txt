1354.Construct Target Array With Multiple Sums
public boolean isPossible(int[] target) {
    if (target.length == 1) {
        return target[0] == 1;
    }
    PriorityQueue<Integer> pq = new PriorityQueue<Integer>((a, b) -> b - a);
    int sum = 0;
    for (int n : target) {
        pq.offer(n);
        sum += n;
    }
    while (!pq.isEmpty()) {
        int num = pq.poll();
        if (num == 1) {
            return true;
        }
        int diff = sum - num;
        int count = (num - 1) / diff;
        if (count == 0) {
            return false;
        }
        sum -= diff * count;
        num -= diff * count;
        pq.offer(num);
    }
    return true;
}