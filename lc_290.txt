290.Word Pattern
public boolean wordPattern(String pattern, String str) {
    String[] map1 = new String[26];
    Map<String, Character> map2 = new HashMap<String, Character>();
    String[] ss = str.split(" ");
    if (pattern.length() != ss.length) {
        return false;
    }
    for (int i = 0; i < ss.length; i++) {
        char c = pattern.charAt(i);
        String s = ss[i];
        if (map1[c - 'a'] == null && !map2.containsKey(s)) {
            map1[c - 'a'] = s;
            map2.put(s, c);
        } else {
            if (map1[c - 'a'] != null && map2.containsKey(s) && map1[c - 'a'].equals(s) && map2.get(s) == c) {
                continue;
            } else {
                return false;
            }
        }
    }
    return true;
}