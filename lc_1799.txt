1799.Maximize Score After N Operations
dfs + memo
public Integer[][] dp;

public int maxScore(int[] nums) {
    dp = new Integer[1 << nums.length][nums.length / 2 + 1];
    return dfs(nums, 0, 1);
}

public int dfs(int[] nums, int map, int idx) {
    if (idx == nums.length / 2 + 1) {
        return 0;
    }
    if (dp[map][idx] != null) {
        return dp[map][idx];
    }
    int length = nums.length;
    int max = 0;
    for (int i = 0; i < length; i++) {
        for (int j = i + 1; j < length; j++) {
            int a = 1 << i;
            int b = 1 << j;
            if ((map & a) == 0 && (map & b) == 0) {
                int tmp = map;
                max = Math.max(max, idx * gcd(nums[i], nums[j]) + dfs(nums, map | a | b, idx + 1));
                map = tmp;
            }
        }
    }
    dp[map][idx] = max;
    return max;
}

public int gcd(int a, int b) {
    if (b == 0) {
        return a;
    }
    return gcd(b, a % b);
}