1201.Ugly Number III
binary search find ceiling key
public int nthUglyNumber(int n, int a, int b, int c) {
    int left = 1;
    int right = 2 * (int) 1e9;
    int res = -1;
    while (left <= right) {
        int mid = left + (right - left) / 2;
        int pos = (int) (mid / a + mid / b + mid /c 
            - mid / getCount(a, b) - mid / getCount(a, c) - mid / getCount(b, c)
            + mid / getCount(a, getCount(b, c)));
        if (pos < n) {
            left = mid + 1;
        } else {
            res = mid;
            right = mid - 1;
        }
    }
    return res;
}

public long gcd(long a, long b) {
    if (a == 0) {
        return b;
    }
    return gcd(b % a, a);
}

public long getCount(long a, long b) {
    return a * b / gcd(a, b);
}