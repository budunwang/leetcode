113.Path Sum II
深度搜索。
public List<List<Integer>> pathSum(TreeNode root, int sum) {
    if (root == null) {
        return new ArrayList<List<Integer>>();
    }
    List<List<Integer>> res = new ArrayList<List<Integer>>();
    dfs(root, res, new ArrayList<Integer>(), sum);
    return res;       
}

public void dfs(TreeNode root, List<List<Integer>> res, List<Integer> list, int sum) {
    if (root.left == null && root.right == null && root.val == sum) {
        list.add(root.val);
        res.add(new ArrayList<Integer>(list));
        list.remove(list.size() - 1);
        return;
    }
    if (root.left != null) {
        list.add(root.val);
        dfs(root.left, res, list, sum - root.val);
        list.remove(list.size() - 1);
    }
    if (root.right != null) {
        list.add(root.val);
        dfs(root.right, res, list, sum - root.val);
        list.remove(list.size() - 1);
    }
}