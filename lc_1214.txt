1214.Two Sum BSTs
public boolean twoSumBSTs(TreeNode root1, TreeNode root2, int target) {
    List<Integer> list1 = new ArrayList<Integer>();
    List<Integer> list2 = new ArrayList<Integer>();
    dfs(root1, list1);
    dfs(root2, list2);
    int left = 0;
    int right = list2.size() - 1;
    while (left < list1.size() && right >= 0) {
        int sum = list1.get(left) + list2.get(right);
        if (sum == target) {
            return true;
        } else if (sum < target) {
            left++;
        } else {
            right--;
        }
    }
    return false;
}

public void dfs(TreeNode root, List<Integer> list) {
    if (root == null) {
        return;
    }
    dfs(root.left, list);
    list.add(root.val);
    dfs(root.right, list);
}