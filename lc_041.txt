41.First Missing Positive
1.O(NlogN)
public int firstMissingPositive(int[] nums) {
    Arrays.sort(nums);
    int num = 1;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] > 0) {
            if (nums[i] > num) {
                return num;
            } else {
                num = nums[i] + 1;
            }
        }
    }
    return num;
}
2.O(N)
[1,2,...,N]
place num at right slot
public int firstMissingPositive(int[] nums) {
    for (int i = 0; i < nums.length; i++) {
        while (nums[i] > 0 && nums[i] <= nums.length && nums[nums[i] - 1] != nums[i]) {
            int tmp = nums[nums[i] - 1];
            nums[nums[i] - 1] = nums[i];
            nums[i] = tmp;
        }
    }
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] != i + 1) {
            return i + 1;
        }
    }
    return nums.length + 1;
}