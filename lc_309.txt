309.Best Time to Buy and Sell Stock with Cooldown
public int maxProfit(int[] prices) {
    if (prices.length == 0) {
        return 0;
    }
    int length = prices.length;
    int[] unhold = new int[length];
    int[] hold = new int[length];
    int[] rest = new int[length];
    unhold[0] = 0;
    hold[0] = -1 * prices[0];
    rest[0] = 0;
    for (int i = 1; i < length; i++) {
        unhold[i] = Math.max(rest[i - 1], unhold[i - 1]);
        hold[i] = Math.max(unhold[i - 1] - prices[i], hold[i - 1]);
        rest[i] = hold[i - 1] + prices[i];
    }
    return Math.max(unhold[length - 1], rest[length - 1]);
}

public int maxProfit(int[] prices) {
    if (prices.length == 0 || prices.length == 1) {
        return 0;
    }
    int length = prices.length;
    int[] unhold = new int[length];
    int[] hold = new int[length];
    unhold[0] = 0;
    unhold[1] = 0;
    hold[0] = -1 * prices[0];
    hold[1] = Math.max(-1 * prices[0], -1 * prices[1]);
    for (int i = 2; i < length; i++) {
        unhold[i] = Math.max(hold[i - 2] + prices[i - 1], unhold[i - 1]);
        hold[i] = Math.max(unhold[i - 1] - prices[i], hold[i - 1]);
    }
    return Math.max(unhold[length - 1], hold[length - 2] + prices[length - 1]);
}