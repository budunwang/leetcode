144.
// 树正序遍历
// 背诵模版
// 解法1
// 可应用于中序遍历
public List<Integer> preorderTraversal(TreeNode root) {
	List<Integer> res = new ArrayList<Integer>();
	if (root == null) {
		return res;
	}
	Stack<TreeNode> stack = new Stack<TreeNode>();
	TreeNode treeNode = root;
	while (!stack.empty() || treeNode != null) {
		while(treeNode != null) {
			res.add(treeNode.val);
			stack.push(treeNode);
			treeNode = treeNode.left;
		}
		treeNode = stack.pop();
		treeNode = treeNode.right;
	}
	return res;
}

// 解法2
public List<Integer> preorderTraversal(TreeNode root) {
	List<Integer> res = new ArrayList<Integer>();
	if (root == null) {
		return res;
	}
	Stack<TreeNode> stack = new Stack<TreeNode>();
	stack.push(root);
	while (!stack.empty()) {
		TreeNode treeNode = stack.pop();
		res.add(treeNode.val);
		if (treeNode.right != null) {
			stack.push(treeNode.right);
		}
		if (treeNode.left != null) {
			stack.push(treeNode.left);
		}
	}
	return res;
}