77.Combinations
深度遍历。
public List<List<Integer>> combine(int n, int k) {
    if (n == 0 || k > n) {
        return new ArrayList<List<Integer>>();
    }
    List<List<Integer>> res = new ArrayList<List<Integer>>();
    dfs(res, new ArrayList<Integer>(), n, k, 1);
    return res;
}

public void dfs(List<List<Integer>> res, List<Integer> list, int n, int k, int start) {
    if (list.size() == k) {
        res.add(new ArrayList<Integer>(list));
        return;
    }
    for (int i = start; i <= n; i++) {
        list.add(i);
        dfs(res, list, n, k, i + 1);
        list.remove(list.size() - 1);
    }
}