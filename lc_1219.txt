1219.Path with Maximum Gold
public int[][] dir;

public int getMaximumGold(int[][] grid) {
    dir = new int[][]{{0, -1}, {1, 0}, {0, 1}, {-1, 0}};
    int row = grid.length;
    int col = grid[0].length;
    int max = 0;
    for (int i = 0; i < row; i++) {
        for (int j = 0; j < col; j++) {
            int num = dfs(grid, i, j);
            max = Math.max(max, num);
        }
    }
    return max;
}

public int dfs(int[][] grid, int x, int y) {
    if (x < 0 || x >= grid.length || y < 0 || y >= grid[0].length || grid[x][y] <= 0) {
        return 0;
    }
    int max = 0;
    int tmp = grid[x][y];
    grid[x][y] = -1;
    for (int i = 0; i < 4; i++) {
        int num = dfs(grid, x + dir[i][0], y + dir[i][1]);
        max = Math.max(max, num);
    }
    grid[x][y] = tmp;
    return grid[x][y] + max;
}