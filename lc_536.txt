536.Construct Binary Tree from String
public TreeNode str2tree(String s) {
    if (s.length() == 0) {
        return null;
    }
    char[] cs = s.toCharArray();
    int sign = cs[0] == '-' ? -1 : 1;
    int num = 0;
    int idx = 0;
    while (idx < cs.length && cs[idx] != '(' && cs[idx] != ')') {
        if (Character.isDigit(cs[idx])) {
            num = num * 10 + (cs[idx] - '0');
        }
        idx++;
    }
    TreeNode treeNode = new TreeNode(sign * num);
    int start = idx;
    idx++;
    int count = 1;
    while (idx < cs.length && count != 0) {
        if (cs[idx] == '(') {
            count++;
        } else if (cs[idx] == ')') {
            count--;
        }
        idx++;
    }
    treeNode.left = idx - 1 > start + 1 ? str2tree(s.substring(start + 1, idx - 1)) : null;
    treeNode.right = s.length() > idx + 1 ? str2tree(s.substring(idx + 1, s.length() - 1)) : null;
    return treeNode;
}