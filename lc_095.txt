95.Unique Binary Search Trees II
public List<TreeNode> generateTrees(int n) {
    if (n == 0) {
        return new ArrayList<TreeNode>();
    }
    return dfs(1, n);
}

public List<TreeNode> dfs(int start, int end) {
    List<TreeNode> list = new ArrayList<TreeNode>();
    if (start > end) {
        list.add(null);
        return list;
    }
    if (start == end) {
        list.add(new TreeNode(start));
        return list;
    }
    for (int i = start; i <= end ; i++) {
        List<TreeNode> ls = dfs(start, i - 1);
        List<TreeNode> rs = dfs(i + 1, end);
        for (TreeNode l : ls) {
            for (TreeNode r : rs) {
                TreeNode treeNode = new TreeNode(i);
                treeNode.left = l;
                treeNode.right = r;
                list.add(treeNode);
            }
        }
    }
    return list;
}