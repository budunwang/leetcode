993.Cousins in Binary Tree
public boolean isCousins(TreeNode root, int x, int y) {
    if (root == null) {
        return false;
    }
    Queue<TreeNode> queue = new LinkedList<TreeNode>();
    queue.add(root);
    while (queue.size() != 0) {
        int size = queue.size();
        boolean hasX = false;
        boolean hasY = false;
        for (int i = 0; i < size; i++) {
            TreeNode treeNode = queue.remove();
            if (treeNode.left != null && treeNode.right != null && 
                ((treeNode.left.val == x && treeNode.right.val == y) 
                 || (treeNode.left.val == y && treeNode.right.val == x))) {
                return false;
            }
            if (treeNode.val == x) {
                hasX = true;
            }
            if (treeNode.val == y) {
                hasY = true;
            }
            if (treeNode.left != null) {
                queue.add(treeNode.left);
            }
            if (treeNode.right != null) {
                queue.add(treeNode.right);
            }
        }
        if (hasX && hasY) {
            return true;
        }
    }
    return false;
}